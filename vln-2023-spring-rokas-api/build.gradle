plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'checkstyle'
}

group = 'com.sourcery'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

checkstyle {
    toolVersion = '10.3'
    ignoreFailures = true
}

checkstyleMain {
    source = 'src/main/java'
    enabled = gradle.startParameter.taskNames.contains('checkstyleMain')
}

checkstyleTest {
    source = 'src/test/java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {

    liquibaseCoreVersion = '4.20.0'
    liquibasePropsFile = 'src/main/resources/liquibase.properties'
    mybatisVersion = '3.0.1'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation "org.springframework:spring-context"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:2.1.1"
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
	liquibaseRuntime "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
	liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:2.1.1"

    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.4'

    implementation "mysql:mysql-connector-java:8.0.30"

    implementation 'su.izotov:ObjectLR:0.6'

    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.springframework.security:spring-security-test'

}

def props = new Properties()
file(project.ext.liquibasePropsFile).withInputStream { props.load(it) }

liquibase {
    activities {
        main {
            changeLogFile props["datasource.change-log"]
            url props["datasource.url"]
            username props["datasource.username"]
            password props["datasource.password"]
            defaultSchemaName props["datasource.schema"]
            classpath "$rootDir/src/main/resources"
        }
    }
}

 tasks.named('test') {
 	useJUnitPlatform()
 }